from .. import loader
import asyncio

@loader.tds
class TelegramSlotsMod(loader.Module):
    """–ê–≤—Ç–æ-üé∞: –∫–∏–¥–∞–µ—Ç —Å–ª–æ—Ç, –ø–æ–∫–∞ –Ω–µ –≤—ã–ø–∞–¥–µ—Ç –Ω—É–∂–Ω—ã–π —Å–∏–º–≤–æ–ª"""

    strings = {"name": "RealSlots"}

    # –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: –∏–º—è ‚Üí –∑–Ω–∞—á–µ–Ω–∏–µ Telegram dice
    fruit_map = {
        "cherry": 1,
        "lemon": 2,
        "orange": 3,
        "grape": 4,
        "777": 5,
        "star": 6
    }

    async def slotscmd(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .slots <–Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Ü–∏—Ñ—Ä–∞ –æ—Ç 1 –¥–æ 6>
        –ü—Ä–∏–º–µ—Ä—ã: .slots 777, .slots grape, .slots 5
        """
        args = message.text.split(maxsplit=1)
        if len(args) < 2:
            await message.edit("–£–∫–∞–∂–∏: .slots <—Ñ—Ä—É–∫—Ç –∏–ª–∏ —á–∏—Å–ª–æ>\n–ü—Ä–∏–º–µ—Ä: .slots grape –∏–ª–∏ .slots 5")
            return

        target_raw = args[1].lower()

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω—É–∂–Ω—ã–π value
        if target_raw.isdigit():
            target_value = int(target_raw)
        else:
            target_value = self.fruit_map.get(target_raw)

        if target_value not in range(1, 7):
            await message.edit("–ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–º–≤–æ–ª. –ò—Å–ø–æ–ª—å–∑—É–π: cherry, lemon, orange, grape, 777, star –∏–ª–∏ 1‚Äì6")
            return

        await message.delete()
        prev_msg = None

        while True:
            # –£–¥–∞–ª—è–µ–º –ø—Ä–æ—à–ª—ã–π –±—Ä–æ—Å–æ–∫
            if prev_msg:
                try:
                    await prev_msg.delete()
                except:
                    pass

            # –ö–∏–¥–∞–µ–º –Ω–∞—Å—Ç–æ—è—â–∏–π —Å–ª–æ—Ç üé∞
            dice_msg = await message.client.send_message(message.chat_id, file="üé∞")
            await asyncio.sleep(2)  # –∂–¥—ë–º –∞–Ω–∏–º–∞—Ü–∏—é

            if dice_msg.media and hasattr(dice_msg.media, "value"):
                if dice_msg.media.value == target_value:
                    break  # –£—Å–ø–µ—Ö ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

            prev_msg = dice_msg
